ig.module( 
	'game.main' 
)
.requires(
	'impact.game',
	'impact.font',
	'game.levels.main',
	'game.entities.player',
	'impact.debug.debug'
)
.defines(function(){

MyGame = ig.Game.extend({
	
	// Load a font
	font: new ig.Font( 'media/04b03.font.png' ),
	mapSize: {x: 0, y: 0},
	// timer: new ig.Timer(),
	currentLevel: LevelMain,

	init: function() {
		// Initialize your game here; bind keys etc.
		ig.input.initMouse();
		ig.input.bind(ig.KEY.P, "pause");

		this.loadLevel( this.currentLevel );
		var sampleMap = ig.game.backgroundMaps[0];
		sampleMap.preRender = true;
		this.mapSize.x = sampleMap.width * sampleMap.tilesize;
		this.mapSize.y = sampleMap.height * sampleMap.tilesize;
		// this.timer.set(10);
		console.log(this.currentLevel.properties.Enemys);
	},

	update: function() {
		// Update all entities and backgroundMaps
		this.parent();

		if (ig.input.state("pause")) {
		console.log("pause");
				ig.system.stopRunLoop.call(ig.system);
				jQuery('#pauseScreen').show();
		}

		var player = this.getEntitiesByType( EntityPlayer )[0];
		if( player ) {
			plPosX = player.pos.x - ig.system.width/2;
			plPosY = player.pos.y - ig.system.height/2;
			if (plPosX > 0 && plPosX < (this.mapSize.x - ig.system.width)) {
				this.screen.x = plPosX;
			}

			if (plPosY > 0 && plPosY < (this.mapSize.y - ig.system.height)) {
				this.screen.y = plPosY;
			}
		}

		// var Enemys = this.getEntitiesByType( EntityEnemy );
		// if (Enemys.length === 0) {
		// 	this.loadLevel( LevelMain );
		// }

	},

	draw: function() {
		// Draw all entities and backgroundMaps
		this.parent();
		
	}
});

// Start the Game with 60fps, a resolution of 320x240, scaled
// up by a factor of 2
// ig.main( '#canvas', MyGame, 60, window.innerWidth, window.innerHeight, 1 );
// ig.main( '#canvas', MyGame, 60, 800, 600, 1 );

});
